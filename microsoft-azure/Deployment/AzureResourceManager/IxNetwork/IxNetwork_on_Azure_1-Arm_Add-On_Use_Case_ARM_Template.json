{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"ImageResourceGroupName": {
			"defaultValue": "Ixia_VE_Azure_9.10",
			"type": "String"
		},
		"PageBlobsStorageAccountName": {
			"defaultValue": "Ixia_VE_Page_Blobs",
			"type": "String"
		},
		"DiagnosticsStorageAccountName": {
			"defaultValue": "Ixia_VE_Diagnostics",
			"type": "String"
		},	
		"VnetName": {
			"defaultValue": "IXIA_AZURE_VNET",
			"type": "String"
		},
        "ManagementSubnetName": {
			"defaultValue": "IXIA_AZURE_VNET_MGMT_SUBNET",
			"type": "String"
		},
		"Test1SubnetName": {
			"defaultValue": "IXIA_AZURE_VNET_TEST1_SUBNET",
			"type": "String"
		},
		"ManagementSecurityRuleSourceIPPrefix": {
			"defaultValue": "42.42.42.42/32",
			"type": "String"
		},
        "IxiaClientPageBlobName": {
			"defaultValue": "IxLoad_VE_Client_9.10.vhd",
			"type": "String"
		},
        "IxLoadClientVmSize": {
			"defaultValue": "Standard_F4s",
			"type": "String",
			"allowedValues": [
				"Standard_F4s",
				"Standard_F4s_v2"
			]
		},
		"VirtualTestAppliance1Eth0IpAddress": { 
			"defaultValue": "10.0.10.13",
			"type": "String"
		},
		"VirtualTestAppliance1Eth1IpAddresses": {
			"defaultValue": ["10.0.2.22", "10.0.2.23", "10.0.2.24", "10.0.2.25", "10.0.2.26", "10.0.2.27", "10.0.2.28", "10.0.2.29", "10.0.2.30", "10.0.2.31"],
			"type": "Array"
		},
        "VirtualTestApplianceImageName": {
			"defaultValue": "Ixia_Virtual_Test_Appliance_9.10",
			"type": "String"
		},
		"VirtualTestApplianceVmSize": {
			"defaultValue": "Standard_F16s",
			"type": "String",
			"allowedValues": [
				"Standard_F16s",
				"Standard_F8s",
				"Standard_F4s"
			]
		},
		"OptionalVMPrefix": {
			"defaultValue": "Ixia",
			"type": "String"
		},
		"UserEmailTag": {
			"defaultValue": "Optional-Email-Tag",
			"type": "String"
		},
		"UserProjectTag": {
			"defaultValue": "Optional-Project-Tag",
			"type": "String"
		},
		"UserOptionsTag": {
			"defaultValue": "MANUAL",
			"type": "String"
		}
	},
    "variables": {
        "apiVersion": "2018-06-01",
		"SubscriptionId" : "[subscription().subscriptionId]",
		"OptionalVMPrefix": "[parameters('OptionalVMPrefix')]",
		"UserEmailTag": "[parameters('UserEmailTag')]",
		"UserProjectTag": "[parameters('UserProjectTag')]",
		"UserOptionsTag": "[parameters('UserOptionsTag')]",
		"ImageResourceGroupName": "[parameters('ImageResourceGroupName')]",
		"PageBlobsStorageAccountName": "[parameters('PageBlobsStorageAccountName')]",
		"DiagnosticsStorageAccountName": "[parameters('DiagnosticsStorageAccountName')]",
        "VnetName": "[parameters('VnetName')]",
        "ManagementSubnetName": "[parameters('ManagementSubnetName')]",
		"MgmtSubnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('VnetName'),  variables('ManagementSubnetName'))]",
        "Test1SubnetName": "[parameters('Test1SubnetName')]",
        "Test1SubnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('VnetName'),  variables('Test1SubnetName'))]",
        "MgmtNetworkSecurityGroupName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_NETWORK_SECURITY_GROUP')]",
        "Test1NetworkSecurityGroupName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_TEST1_NETWORK_SECURITY_GROUP')]",  	
        "MgmtSshSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_SSH_RULE')]",
        "MgmtHttpSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_WEB_RULE')]",
        "MgmtHttpsSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_HTTPS_RULE')]",
        "MgmtRdpSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_RDP_RULE')]",
        "ManagementSecurityRuleSourceIPPrefix": "[parameters('ManagementSecurityRuleSourceIPPrefix')]",
        "IxiaClientEth0Name": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_CLIENT_ETH0')]",
        "VirtualTestAppliance1Eth0Name": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_VIRTUALTESTAPPLIANCE1_ETH0')]",
        "VirtualTestAppliance1Eth1Name": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_VIRTUALTESTAPPLIANCE1_ETH1')]",
		"VirtualTestAppliance1Eth0IpAddress": "[parameters('VirtualTestAppliance1Eth0IpAddress')]",
		"VirtualTestAppliance1Eth1IpAddresses": "[parameters('VirtualTestAppliance1Eth1IpAddresses')]",
        "IxiaClientName": "[concat(variables('OptionalVMPrefix'), '-', 'IXIA-AZURE-IXLOAD-CLIENT')]",
		"IxiaClientDnsLabel": "[concat(toLower(variables('OptionalVMPrefix')), '-', toLower(replace(resourceGroup().name, '_', '-')), '-', 'ixia-ixload-client', '-', substring(uniqueString(resourceGroup().id),0,6))]",
        "IxiaClientEnableAcceleratedNetworking": false,
        "IxiaClientEnableIPForwarding": false,
		"IxiaClientBootDiagnosticsEnabled": true,
        "IxLoadClientVmSize": "[parameters('IxLoadClientVmSize')]",
		"IxiaClientDiskSizeGB": "127",
        "VirtualTestAppliance1Name": "[concat(variables('OptionalVMPrefix'), '-', 'IXIA-AZURE-IXLOAD-VIRTUALTESTAPPLIANCE1')]",
		"VirtualTestAppliance1DnsLabel": "[concat(toLower(variables('OptionalVMPrefix')), '-', toLower(replace(resourceGroup().name, '_', '-')), '-', 'ixia-ixload-virtualtestappliance-1', '-', substring(uniqueString(resourceGroup().id),0,6))]",
        "VirtualTestApplianceEnableAcceleratedNetworking": true,
        "VirtualTestApplianceEnableIPForwarding": true,
		"VirtualTestApplianceDisablePasswordAuthentication": true,
		"VirtualTestApplianceProvisionVMAgent": false,
		"VirtualTestApplianceBootDiagnosticsEnabled": true,
        "VirtualTestApplianceVmSize": "[parameters('VirtualTestApplianceVmSize')]",
		"VirtualTestApplianceDiskSizeGB": "14",
        "MgmtPublicIpAddressName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_MGMT_PUBLIC_IP')]",
        "VirtualTestAppliance1Eth0PublicIpAddressName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_VIRTUALTESTAPPLIANCE1_ETH0_PUBLIC_IP')]",
        "IxiaClientPageBlobName": "[parameters('IxiaClientPageBlobName')]",
		"IxiaClientPageBlobPath": "[concat('/vhds/', variables('IxiaClientPageBlobName'))]",
		"IxiaClientCreateOption": "Attach",
        "VirtualTestApplianceImageName": "[parameters('VirtualTestApplianceImageName')]",
		"VirtualTestApplianceImageId": "[concat('/subscriptions/', variables('SubscriptionId'), '/resourceGroups/', variables('ImageResourceGroupName'), '/providers/Microsoft.Compute/images/', variables('VirtualTestApplianceImageName'))]",		
		"VirtualTestApplianceCreateOption": "FromImage",		
		"AdminUserName": "Ixia-Admin",
		"SshPublicKeyData": "ssh-rsa",
		"SshKeyPath": "[concat('/home/',variables('AdminUserName'),'/.ssh/authorized_keys')]"
	},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('MgmtNetworkSecurityGroupName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "securityRules": [
                    {
                        "name": "[variables('MgmtHttpsSecurityRuleName')]",
                        "properties": {
                            "description": "Allow HTTPS",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[variables('MgmtSshSecurityRuleName')]",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[variables('MgmtHttpSecurityRuleName')]",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[variables('MgmtRdpSecurityRuleName')]",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        }, 

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('Test1NetworkSecurityGroupName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
				"Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "securityRules": [
                    {
                        "name": "[variables('MgmtHttpSecurityRuleName')]",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        }, 

        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('IxiaClientEth0Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                             "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('MgmtPublicIpAddressName'))]"
                            },                           
                            "subnet": {
                                "id": "[variables('MgmtSubnetRef')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": "[variables('IxiaClientEnableAcceleratedNetworking')]",
                "enableIPForwarding": "[variables('IxiaClientEnableIPForwarding')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MgmtNetworkSecurityGroupName'))]"
                },
                "primary": true,
                "virtualMachine": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('IxiaClientName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MgmtNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('MgmtPublicIpAddressName'))]"
            ]
        },
                   
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('VirtualTestAppliance1Eth0Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth0IpAddress')]",
                            "privateIPAllocationMethod": "Static",
                             "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('VirtualTestAppliance1Eth0PublicIpAddressName'))]"
                            }, 
                            "subnet": {
                                "id": "[variables('MgmtSubnetRef')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": "[variables('VirtualTestApplianceEnableAcceleratedNetworking')]",
                "enableIPForwarding": "[variables('VirtualTestApplianceEnableIPForwarding')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MgmtNetworkSecurityGroupName'))]"
                },
                "primary": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MgmtNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('VirtualTestAppliance1Eth0PublicIpAddressName'))]"
            ]
        },      
 
       {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('VirtualTestAppliance1Eth1Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[0]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[1]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[2]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig4",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[3]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig5",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[4]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig6",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[5]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig7",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[6]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig8",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[7]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfig9",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[8]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    },
                    {
                        "name": "ipconfigA",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[9]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('Test1SubnetRef')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": "[variables('VirtualTestApplianceEnableAcceleratedNetworking')]",
                "enableIPForwarding": "[variables('VirtualTestApplianceEnableIPForwarding')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('Test1NetworkSecurityGroupName'))]"
                },
                "primary": false
            },
            "dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('Test1NetworkSecurityGroupName'))]"
            ]
        },

        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('MgmtPublicIpAddressName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('IxiaClientDnsLabel')]",
                    "fqdn": "[concat(variables('IxiaClientDnsLabel'),'.', resourceGroup().location,'.cloudapp.azure.com')]"
                }
            },
            "dependsOn": []
        },

        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('VirtualTestAppliance1Eth0PublicIpAddressName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('VirtualTestAppliance1DnsLabel')]",
                    "fqdn": "[concat(variables('VirtualTestAppliance1DnsLabel'),'.', resourceGroup().location,'.cloudapp.azure.com')]"
                }
            },
            "dependsOn": []
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('IxiaClientName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('IxLoadClientVmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat('disk_', variables('IxiaClientName'))]",
                        "createOption": "[variables('IxiaClientCreateOption')]",
                        "vhd": {
                            "uri": "[concat('https', '://', variables('PageBlobsStorageAccountName'), '.blob.core.windows.net', variables('IxiaClientPageBlobPath'))]"
                        },
                        "caching": "ReadWrite",
                        "diskSizeGB": "[variables('IxiaClientDiskSizeGB')]"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('IxiaClientEth0Name'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('IxiaClientBootDiagnosticsEnabled')]",
                        "storageUri": "[concat('https', '://', variables('DiagnosticsStorageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('IxiaClientEth0Name'))]"
            ]
        },        

        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('VirtualTestAppliance1Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
				"Project": "[variables('UserProjectTag')]",
			    "Options": "[variables('UserOptionsTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('VirtualTestApplianceVmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[variables('VirtualTestApplianceImageId')]"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat('disk_', variables('VirtualTestAppliance1Name'))]",
                        "createOption": "[variables('VirtualTestApplianceCreateOption')]",
                        "caching": "ReadWrite",
                        "diskSizeGB": "[variables('VirtualTestApplianceDiskSizeGB')]"
                    },
                    "dataDisks": []
                },
				"osProfile": {
					"computerName": "[variables('VirtualTestAppliance1Name')]",
					"adminUsername": "[variables('AdminUserName')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": "[variables('VirtualTestApplianceDisablePasswordAuthentication')]",
						"provisionVMAgent": "[variables('VirtualTestApplianceProvisionVMAgent')]",
						"ssh": {
						  "publicKeys": [
							{
							  "path": "[variables('SshKeyPath')]",
							  "keyData": "[variables('SshPublicKeyData')]"
							}
						  ]
						}
					}
				},
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth0Name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth1Name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('VirtualTestApplianceBootDiagnosticsEnabled')]",
                        "storageUri": "[concat('https', '://', variables('DiagnosticsStorageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth0Name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth1Name'))]"
            ]
        }
    ]
}
